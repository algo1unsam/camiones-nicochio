import ruta.*
import camiones.*
import mercaderia.*
import deposito.*
import motoneta.*

//punto1
test" saber el peso de lo que transporta el camion , knight su peso es de 500, 
bumblebee es de 800 y ladrillo pesa 2kilos x ladrillo lleva 2" {
	assert.equals(500, knightRider.peso())
	assert.equals(800, bumblebee.peso())
	ladrillo.cantidadDeLadrillosALlevar(2)
	ladrillo.calcularPeso()
	assert.equals(4, ladrillo.peso())
}

test" cargar un camion con la mercaderia " {
	deposito.recibirMateriales(bumblebee)
	deposito.recibirMateriales(knightRider)
	deposito.recibirMateriales(ladrillo)
	assert.equals(550, camion.cargaDisponible())
}

test " el deposito queda vacio ya que se llena el camion" {
	deposito.recibirMateriales(ladrillo)
	deposito.recibirMateriales(knightRider)
	deposito.llenarCamion()
	assert.equals(deposito.verStockDeDeposito().isEmpty())
}

test "el camion no puede llevar toda la mercaderia que recibe" {
	deposito.recibirMateriales(knightRider)
	deposito.recibirMateriales(bumblebee)
	assert.throwsExceptionWithMessage("no se puede cargar el camion por que supera la carga", { => deposito.llenarCamion()})
}

test " cargo a kightRider y el peso total del camion es de 500   " {
	deposito.recibirMateriales(knightRider)
	deposito.llenarCamion()
	assert.equals(500, camion.pesoTotalQueHayEnElCamion())
}

test " cargo a knightrider y 10 ladrillos en el camion y la carga disponibles es de 30 " {
	camion.cargaleUnaCosa(knightRider)
	ladrillo.cantidadDeLadrillosALlevar(10)
	ladrillo.calcularPeso()
	camion.cargaleUnaCosa(ladrillo)
	assert.equals(30, camion.cargaDisponible())
}

test "Camion: si cargo un ladrillo y knightRider, su cosa mas peligrosa es el segundo" {
	camion.cargaleUnaCosa(ladrillo)
	camion.cargaleUnaCosa(knightRider)
	assert.equals(knightRider, camion.cualEslaCosaMasPeligrosa())
}

test "saber si puede pasar por la ruta que tiene 20 de nivel de peligrosidad
 si esta cargado knightRider que tiene 10 de nivel de peligrosidad" {
	camion.cargaleUnaCosa(knightRider)
	ladrillo.cantidadDeLadrillosALlevar(10)
	camion.cargaleUnaCosa(ladrillo)
	assert.that(camion.saberSiPuedoIrPorLaRuta())
}

test "Motoneta: puede llevar dos ladrillos" {
	var materialesMotoneta = []
	materialesMotoneta.add(ladrillo)
	ladrillo.cantidadDeLadrillosALlevar(2)
	deposito.llenarMotoneta()
	assert.equals([],motoneta.verMaterialesCargador())
}

test "Embalaje de seguridad: si  KnighRider esta contenido , su peso es 500 y peligrosidad 5" {
  embalajeDeSeguridad.peso(knightRider)
  embalajeDeSeguridad.saberNivelDePeligrosidad(knightRider)
  assert.equals(500, embalajeDeSeguridad.saberPeso())
  assert.equals(5, embalajeDeSeguridad.nivelDePeligrosidad())
}





